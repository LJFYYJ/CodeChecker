#include<bits/stdc++.h>

using namespace std;

vector<int>adj[100005];

vector<int>visited(100005,0);

int ans=0,last;

void ini(int  n)

{

	for(int i=1;i<=n;i++)

	{

		visited[i]=0;

		adj[i].clear();

	}

}

void dfs(int node)

{

	cout<<node<<"<---\n";

   visited[node]=1;

   if(node!=last)

   ans++;

   for(int i=0;i<adj[node].size();i++)

   {

   	if(visited[adj[node][i]]==-1)

   		dfs(adj[node][i]);

   }

}

int main()

{

	int nodes_yaha=0;

	int n,m,temp;

	cin>>n>>m;



	int pos[n+1];

	for(int i=1;i<=n;i++)

	{

          cin>>temp;

          last=temp;

          pos[temp]=i;

	}



    int age,piche;

	for(int i=1;i<=m;i++)

	{

       cin>>age>>piche;

       if(visited[age]==0)

       {

       	 if(age!=last)

         nodes_yaha++;

         visited[age]=-1;

       }

       if(visited[piche]==0)

       {



        if(piche!=last)

       	nodes_yaha++;

       	visited[piche]=-1;

       }

       if(pos[age]<pos[piche]&&pos[age]+1!=pos[piche])

       	adj[piche].push_back(age);

	}



	dfs(last);

	cout<<nodes_yaha<<"\n";

    cout<<ans<<"\n";

	cout<<nodes_yaha-(ans)<<"\n";

	return 0;



}