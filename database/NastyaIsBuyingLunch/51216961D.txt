#include<bits/stdc++.h>
using namespace std;

#define ft first
#define sd second
#define pb push_back
#define mp make_pair
#define rep(i,n) for(i=0;i<n;i++)
#define pr pair<int,int>
#define pll pair<long long,long long>
#define ll long long
#define v vector
#define all(a) a.begin(),a.end()
#define ina(a,i,n) for(i=0;i<n;i++)cin>>a[i]
#define mmst(a) memset(a,0,sizeof(a))
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))

v<v<int> > graph(300006);
int pos[300005];
int a[300005];
int lbond[300004];

int runbondedcount(v<int> &graph, int index) {
	int ans=0;
	for(int i=0;i<graph.size();i++) {
		if(graph[i] > index && lbond[a[graph[i]]] == 0) {
			ans++;
		}
	}
	return ans;
}

int main() {
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);   
    #endif
    ios_base::sync_with_stdio(false);
    int i,j,k,n,m,t,l,r,q,x,p,y;
    cin>>n>>m;
    rep(i,n){
    	cin>>x;
    	a[i] = x;
    	pos[x] = i;
    }

    rep(i,m) {
    	cin>>x>>y;
    	if(y == a[n-1]) {
    		lbond[x] = 1;
    	}
    	else 
    		graph[x].pb(pos[y]);
    }

    int unbonded = 0;
    int ans=0;
    for(i=n-2;i>=0;i--) {
    	if(lbond[a[i]] == 0) {
    		unbonded++;
    	}
    	else {
    		if(runbondedcount(graph[a[i]],i) < unbonded) {
    			ans--;
    			lbond[a[i]] = 0;
    			unbonded++;
    		}
    		ans++;
    	}
    }
    cout<<ans<<endl;
    return 0;
}