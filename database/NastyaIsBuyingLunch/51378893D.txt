#include<bits/stdc++.h>

int main()
{
	int n,m;
	scanf("%d %d",&n,&m);
	int queue[n+1];
	for(int i=1;i<=n;i++)
	{
		scanf("%d",&queue[i]);
	}
	int pair[m][2];
	int compatible[n+1];
	int swap[n+1][n+1];
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=n;j++)
		swap[i][j]=0;
	}
	for(int i=1;i<=n;i++)
	{
		compatible[i]=0;
	}
	for(int i=0;i<m;i++)
	{
		scanf("%d %d",&pair[i][0],&pair[i][1]);
		swap[pair[i][0]][pair[i][1]]=1;
		if(pair[i][1]==queue[n])
		{//printf("compatible for %d\n",pair[i][0]);
			compatible[pair[i][0]]=1;
		}
	}

	int size=n;
	int count=0;
	int index;
	for(int i=n-1;i>=1;i--)
	{
		if(compatible[queue[i]]==1)
		{//printf("came for %d\n",queue[i]);
			//index=i;
			int flag=1;
			int l=queue[i];
			for(int j=size-1;j>i;j--)
			{int r=queue[j];
				/*int flag2=0;
				for(int k=0;k<m;k++)
				{
					if(pair[k][0]==l&&pair[k][1]==r)
					{
						flag2=1;
						break;
					}
				}

				if(flag2==0)
				{
					flag=0;
					break;
				}*/
				if(!swap[l][r])
				{
					flag=0;
					break;
				}
				
			}
			if(flag==1)		//shifting
			{	
				for(int x=i+1;x<=size;x++)
				{
					queue[x-1]=queue[x];
				}
				size--;
				count++;
			}
			else
			{
				//Do nothing	
			}
		}
		//for(int z=1;z)
	}

	printf("%d\n",count);


	return 0;
}