#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>

#include <utility>
#include <iostream>
#include <iomanip>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <stack>
#include <queue>

using namespace std;

#define init() ios::sync_with_stdio(false); cin.tie();
#define for0(i, n) for (int i=0; i<n; i++)
#define for1(i, n) for (int i=1; i<=n; i++)
#define for2(i, a, b) for (int i=a; i<=b; i++)
#define bac0(i, n) for (int i=n-1; i>=0; i--)
#define bac1(i, n) for (int i=n; i>0; i--)
#define bac2(i, a, b) for (int i=a; i>=b; i--)
#define PB push_back
#define MOD 1000000009
#define S second
#define F first

#define xL ((x<<1)+1)
#define xR ((x<<1)+2)

typedef long long ll;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef pair<ll, ll> pll;
typedef pair<ll, char> ic;

const int N = (int) (3e5 + 5);

int n, m;
int q[N], p[N];
set<int> v[N];
vector<int> f;

int main() {
    init()

    cin >> n >> m;
    for0 (i, n) {
        cin >> q[i];
        p[q[i]] = i;
    }

    int a, b;
    while (m--) {
        cin >> a >> b;
        if (p[a] < p[b]) v[a].insert(b);
    }

    for (int i = n - 2; i >= 0; i--) {
        int x = q[i];
        long dist = n - 1 - i - f.size();

        if (v[x].size() >= dist) {
            for (int y: f) v[x].erase(y);
            if (v[x].size() == dist) f.PB(x);
        }
    }

    cout << f.size() << endl;

    return 0;
}