#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <queue>

using namespace std;

#define fast_cin() ios_base::sync_with_stdio(false)
typedef long long ll;

const int N = 510;
int grid[N][N], other[N][N];

int main() {
    fast_cin();
    int n, m; 
    cin >> n >> m;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> grid[i][j];
        }
    }
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cin >> other[i][j];
        }
    }
    for(int i = 0; i < m; i++) {
        vector<int> A, B;
        int r = 0;
        int c = i;
        while(r < n && c >= 0) {
            A.push_back(grid[r][c]);
            B.push_back(other[r][c]);
            r++;
            c--; 
        }
        sort(A.begin(), A.end());
        sort(B.begin(), B.end());
        for(int j = 0; j < A.size(); j++) {
            if(A[j] != B[j])
            {
                cout << "NO" << endl;
                return 0;
            }
        }
    }
    for(int i = 1; i < n; i++) {
        vector<int> A, B;
        int r = i;
        int c = m - 1;
        while(r < n && c >= 0) {
            A.push_back(grid[r][c]);
            B.push_back(other[r][c]);
            r++;
            c--; 
        }
        sort(A.begin(), A.end());
        sort(B.begin(), B.end());
        for(int j = 0; j < A.size(); j++) {
            if(A[j] != B[j])
            {
                cout << "NO" << endl;
                return 0;
            }
        }
    }
    cout << "YES" << endl;
    return 0;
}
