#include <bits/stdc++.h>





using namespace std;



#define all(v)				((v).begin()), ((v).end())

#define sz(v)				((int)((v).size()))

#define clr(v, d)			memset(v, d, sizeof(v))

#define rep(i, v)		for(int i=0;i<sz(v);++i)

#define lp(i, n)		for(int i=0;i<(int)(n);++i)

#define lpi(i, j, n)	for(int i=(j);i<(int)(n);++i)

#define lpd(i, j, n)	for(int i=(j);i>=(int)(n);--i)



typedef long long ll;

const int OO = (int)1e9;

const double EPS = (1e-7);

int dcmp(double x, double y) {	return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1;	}



#define pb					push_back

#define MP					make_pair

#define P(x)				cout<<#x<<" = { "<<x<<" }\n"

typedef long double   	  ld;

typedef vector<int>       vi;

typedef vector<double>    vd;

typedef vector< vi >      vvi;

typedef vector< vd >      vvd;

typedef vector<string>    vs;



ll n, m;

int t, k, cnt=0;



bool valid(int i, int j){ 

    return i>=0 && i<n && j>=0 && j<m;}



int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};

int dy[] = {1, -1, 0, 0, 1, -1, -1, 1};

int dx1[] = {0, 0, 1, -1};

int dy1[] = {1, -1, 0, 0};



vector < vector<char> > grid;

vector < vector<bool> > vis;

vector< vector< pair<int, int> > > adjList;

vector< vector<int> > adj;

vector<bool> visited;









int main() {

    

//    freopen("out.txt","r",stdin);

//    ios_base::sync_with_stdio(false);

//    cin.tie(NULL);cout.tie(NULL);

    vector<int>v;

    ll t, a, b;

    cin >> t;

    vector<int> m(t);

    for(int i=0;i<t;i++){

        cin>>m[i]>>m[i];

    }

    int p;

    cin>>p;

    cout<<t-(lower_bound(m.begin(),m.end(),p)-m.begin());

    

    return 0;

}