#include<bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>

#include <ext/pb_ds/tree_policy.hpp>

// #include <ext/pb_ds/detail/standard_policies.hpp>

using namespace std;

using namespace __gnu_pbds;

// gp_hash_table<int, int> table;



#define ll long long  int

#define ull unsigned ll

#define vii vector< ll >

#define pll pair<ll,ll>

#define pb push_back

# define mp make_pair

#define pii pair<ll,ll>

#define all(x) x.begin(),x.end()

#define IOS ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)

#define se second

#define fi first

#define ins insert

#define _rand(l,r) uniform_int_distribution<ll>(l, r)(rng)

#define flush() cout.flush()

#define swap(a,b) {ll _temp=a;a=b;b=_temp;}

#define rep(l,r) for(i=l;i<=r;++i)

#define repd(r,l) for(i=r;i>=l;--i)

#define repj(l,r) for(j=l;j<=r;++j)

#define repdj(r,l) for( j=r;j>=l;--j)

// typedef __int128 bign;



#define TRACE



#ifdef TRACE

#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)

template <typename Arg1>

void __f(const char* name, Arg1&& arg1){

  cerr << name << " : " << arg1 << std::endl;

}

template <typename Arg1, typename... Args>

void __f(const char* names, Arg1&& arg1, Args&&... args){

  const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);

}

#else

#define trace(...)

#endif



#define MD          1000000007

#define M       200011

#define N       5011

#define LN      14

#define fftmod      998244353,

#define EPS         (double)1e-10

#define PI          3.14159265358979323846264

#define inf 1e16

#define kill {puts("-1");exit(0);}

ll md=MD;

inline ll exp(ll a,ll b){ll r=1LL;while(b>0){if(b&1){r=r*(a%md);r=(r+md)%md;}b/=2;a=(a%md)*(a%md);a=(a+md)%md;}return (r+md)%md;}

ll gcd(ll a,ll b){if(b==0)return a;return gcd(b,a%b);}

inline ll poww(ll a,ll b){ll r=1LL;while(b>0){if(b&1)r=r*a;b/=2;a=a*a;}return (ll)r;}

int main(){

IOS;

int n;

cin>>n;

vector<pll>v;

for(int i=0;i<n;i++){

  int l,r;

  cin>>l>>r;

  v.pb(mp(l,r));

}

int k;

cin>>k;

for(int i=0;i<n;i++){

  if(v[i].fi<=k && v[i].se>=k){

    cout<<(n-(i))<<endl;

    return 0;

  }

}



}